import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as e,d as a}from"./app-CAdWGPj0.js";const i="/vuepress/assets/20240624001-BCo7l1kk.png",l={},t=a('<p>原创 运维有术 [运维有术](javascript:void(0)😉 <em>2024-04-25 21:27</em> <em>山东</em></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>2024 年云原生运维实战文档 99 篇原创计划</strong> <strong>第 009 篇</strong> ｜<strong>KubeSphere 最佳实战「2024」系列</strong> <strong>第 001 篇</strong></p></div><p>你好，欢迎来到<strong>运维有术</strong>。</p><p>今天分享的内容是 <strong>KubeSphere 最佳实战「2024」</strong> 系列文档中的 <strong>KubeKey 部署 Kubernetes v1.28.8 实战</strong>。</p><p>在某些生产环境下，我们仅需要一个原生的 k8s 集群，无需部署 <strong>KubeSphere</strong> 这样的图形化管理控制台。在我们已有的技术栈里，已经习惯了利用 <strong>KubeKey</strong> 部署 KubeSphere 和 Kubernetes 集群。今天，我将为大家实战演示如何在 <strong>openEuler 22.03 LTS SP3</strong> 上，利用 KubeKey 部署一套纯粹的 k8s 集群。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>内容导图</strong></p></div><figure><img src="'+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>实战服务器配置 (架构 1:1 复刻小规模生产环境，配置略有不同)</strong></p></div><table><thead><tr><th style="text-align:center;">主机名</th><th style="text-align:center;">IP</th><th style="text-align:center;">CPU</th><th style="text-align:center;">内存</th><th style="text-align:center;">系统盘</th><th style="text-align:center;">数据盘</th><th style="text-align:center;">用途</th></tr></thead><tbody><tr><td style="text-align:center;">ksp-master-1</td><td style="text-align:center;">192.168.9.131</td><td style="text-align:center;">8</td><td style="text-align:center;">16</td><td style="text-align:center;">40</td><td style="text-align:center;">100</td><td style="text-align:center;">k8s-master</td></tr><tr><td style="text-align:center;">ksp-master-2</td><td style="text-align:center;">192.168.9.132</td><td style="text-align:center;">8</td><td style="text-align:center;">16</td><td style="text-align:center;">40</td><td style="text-align:center;">100</td><td style="text-align:center;">k8s-master</td></tr><tr><td style="text-align:center;">ksp-master-3</td><td style="text-align:center;">192.168.9.133</td><td style="text-align:center;">8</td><td style="text-align:center;">16</td><td style="text-align:center;">40</td><td style="text-align:center;">100</td><td style="text-align:center;">k8s-master</td></tr><tr><td style="text-align:center;">合计</td><td style="text-align:center;">3</td><td style="text-align:center;">24</td><td style="text-align:center;">48</td><td style="text-align:center;">120</td><td style="text-align:center;">300</td><td style="text-align:center;"></td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>实战环境涉及软件版本信息</strong></p></div><ul><li>操作系统：<strong>openEuler 22.03 LTS SP3 x64</strong></li><li>Kubernetes：<strong>v1.28.8</strong></li><li>Containerd：<strong>1.7.13</strong></li><li>KubeKey: <strong>v3.1.1</strong></li></ul><h2 id="_1-操作系统基础配置" tabindex="-1"><a class="header-anchor" href="#_1-操作系统基础配置"><span><strong>1. 操作系统基础配置</strong></span></a></h2><p>请注意，以下操作无特殊说明时需在所有服务器上执行。本文只选取 Master-1 节点作为演示，并假定其余服务器都已按照相同的方式进行配置和设置。</p><h3 id="_1-1-配置主机名" tabindex="-1"><a class="header-anchor" href="#_1-1-配置主机名"><span>1.1 配置主机名</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>hostnamectl hostname ksp-master-1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_1-2-配置-dns" tabindex="-1"><a class="header-anchor" href="#_1-2-配置-dns"><span>1.2 配置 DNS</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>echo &quot;nameserver 114.114.114.114&quot; &gt; /etc/resolv.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_1-3-配置服务器时区" tabindex="-1"><a class="header-anchor" href="#_1-3-配置服务器时区"><span>1.3 配置服务器时区</span></a></h3><ul><li>配置服务器时区为 <strong>Asia/Shanghai</strong>。</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>timedatectl set-timezone Asia/Shanghai</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_1-4-配置时间同步" tabindex="-1"><a class="header-anchor" href="#_1-4-配置时间同步"><span>1.4 配置时间同步</span></a></h3><ul><li>安装 chrony 作为时间同步软件</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>yum install chrony</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>编辑配置文件 <code>/etc/chrony.conf</code>，修改 ntp 服务器配置</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>vi /etc/chrony.conf</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 删除所有的 pool 配置</span></span>
<span class="line"><span>pool pool.ntp.org iburst</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 增加国内的 ntp 服务器，或是指定其他常用的时间服务器</span></span>
<span class="line"><span>pool cn.pool.ntp.org iburst</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 上面的手工操作，也可以使用 sed 自动替换</span></span>
<span class="line"><span>sed -i &#39;s/^pool pool.*/pool cn.pool.ntp.org iburst/g&#39; /etc/chrony.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>重启并设置 chrony 服务开机自启动</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>systemctl enable chronyd --now</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>验证 chrony 同步状态</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># 执行查看命令</span></span>
<span class="line"><span>chronyc sourcestats -v</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 正常的输出结果如下</span></span>
<span class="line"><span>[root@ksp-master-1 ~]# chronyc sourcestats -v</span></span>
<span class="line"><span>                             .- Number of sample points in measurement set.</span></span>
<span class="line"><span>                            /    .- Number of residual runs with same sign.</span></span>
<span class="line"><span>                           |    /    .- Length of measurement set (time).</span></span>
<span class="line"><span>                           |   |    /      .- Est. clock freq error (ppm).</span></span>
<span class="line"><span>                           |   |   |      /           .- Est. error in freq.</span></span>
<span class="line"><span>                           |   |   |     |           /         .- Est. offset.</span></span>
<span class="line"><span>                           |   |   |     |          |          |   On the -.</span></span>
<span class="line"><span>                           |   |   |     |          |          |   samples. \\</span></span>
<span class="line"><span>                           |   |   |     |          |          |             |</span></span>
<span class="line"><span>Name/IP Address            NP  NR  Span  Frequency  Freq Skew  Offset  Std Dev</span></span>
<span class="line"><span>==============================================================================</span></span>
<span class="line"><span>111.230.189.174            18  11   977     -0.693      6.795  -1201us  2207us</span></span>
<span class="line"><span>electrode.felixc.at        18  10   917     +2.884      8.258    -31ms  2532us</span></span>
<span class="line"><span>tick.ntp.infomaniak.ch     14   7   720     +2.538     23.906  +6176us  4711us</span></span>
<span class="line"><span>time.cloudflare.com        18   7   913     +0.633      9.026  -2543us  3142us</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-关闭系统防火墙" tabindex="-1"><a class="header-anchor" href="#_1-5-关闭系统防火墙"><span>1.5 关闭系统防火墙</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>systemctl stop firewalld &amp;&amp; systemctl disable firewalld</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_1-6-禁用-selinux" tabindex="-1"><a class="header-anchor" href="#_1-6-禁用-selinux"><span>1.6 禁用 SELinux</span></a></h3><p>openEuler 22.03 SP3 最小化安装的系统默认启用了 SELinux，为了减少麻烦，我们所有的节点都禁用 SELinux。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># 使用 sed 修改配置文件，实现彻底的禁用</span></span>
<span class="line"><span>sed -i &#39;s/^SELINUX=enforcing/SELINUX=disabled/&#39; /etc/selinux/config</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 使用命令，实现临时禁用，这一步其实不做也行，KubeKey 会自动配置</span></span>
<span class="line"><span>setenforce 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-7-安装系统依赖" tabindex="-1"><a class="header-anchor" href="#_1-7-安装系统依赖"><span>1.7 安装系统依赖</span></a></h3><p>在所有节点，执行下面的命令为 Kubernetes 安装系统基本依赖包。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># 安装 Kubernetes 系统依赖包</span></span>
<span class="line"><span>yum install curl socat conntrack ebtables ipset ipvsadm</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 安装 tar 包，不装的话后面会报错。openEuler 也是个奇葩，迭代这么多版本了，默认居然还不安装 tar</span></span>
<span class="line"><span>yum install tar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-操作系统磁盘配置" tabindex="-1"><a class="header-anchor" href="#_2-操作系统磁盘配置"><span><strong>2. 操作系统磁盘配置</strong></span></a></h2><p>服务器新增一块数据盘 <strong>/dev/sdb</strong>，用于 <strong>Containerd</strong> 和 <strong>Kubernetes Pod</strong> 的持久化存储。</p><p>为了满足部分用户希望在生产上线后，磁盘容量不足时可以实现动态扩容。本文采用了 LVM 的方式配置磁盘（<strong>实际上，本人维护的生产环境，几乎不用 LVM</strong>）。</p><p>请注意，以下操作无特殊说明时需在集群所有节点上执行。本文只选取 <strong>Master-1</strong> 节点作为演示，并假定其余服务器都已按照相同的方式进行配置和设置。</p><h3 id="_2-1-使用-lvm-配置磁盘" tabindex="-1"><a class="header-anchor" href="#_2-1-使用-lvm-配置磁盘"><span>2.1 使用 LVM 配置磁盘</span></a></h3><ul><li>创建 PV</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span> pvcreate /dev/sdb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>创建 VG</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>vgcreate data /dev/sdb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>创建 LV</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># 使用所有空间，VG 名字为 data，LV 名字为 lvdata</span></span>
<span class="line"><span>lvcreate -l 100%VG data -n lvdata</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-格式化磁盘" tabindex="-1"><a class="header-anchor" href="#_2-2-格式化磁盘"><span>2.2 格式化磁盘</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>mkfs.xfs /dev/mapper/data-lvdata</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-3-磁盘挂载" tabindex="-1"><a class="header-anchor" href="#_2-3-磁盘挂载"><span>2.3 磁盘挂载</span></a></h3><ul><li>手工挂载</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>mkdir /data</span></span>
<span class="line"><span>mount /dev/mapper/data-lvdata /data/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>开机自动挂载</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>tail -1 /etc/mtab &gt;&gt; /etc/fstab</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-4-创建数据目录" tabindex="-1"><a class="header-anchor" href="#_2-4-创建数据目录"><span>2.4 创建数据目录</span></a></h3><ul><li>创建 <strong>OpenEBS</strong> 本地数据根目录</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>mkdir -p /data/openebs/local</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>创建 <strong>Containerd</strong> 数据目录</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>mkdir -p /data/containerd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>创建 Containerd 数据目录软连接</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>ln -s /data/containerd /var/lib/containerd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>说明：</strong> KubeKey 到 v3.1.1 版为止，一直不支持在部署的时候更改 Containerd 的数据目录，只能用这种目录软链接到变通方式来增加存储空间（<strong>也可以提前手工安装 Containerd</strong>）。</p></div><h2 id="_3-安装部署-kubernetes" tabindex="-1"><a class="header-anchor" href="#_3-安装部署-kubernetes"><span><strong>3. 安装部署 Kubernetes</strong></span></a></h2><h3 id="_3-1-下载-kubekey" tabindex="-1"><a class="header-anchor" href="#_3-1-下载-kubekey"><span>3.1 下载 KubeKey</span></a></h3><p>本文将 <strong>master-1</strong> 节点作为部署节点，把 KubeKey (下文简称 kk) 最新版 (<strong>v3.1.1</strong>) 二进制文件下载到该服务器。具体 kk 版本号可以在kk release 页面查看。</p><ul><li>下载最新版的 KubeKey</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>mkdir ~/kubekey</span></span>
<span class="line"><span>cd ~/kubekey/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 选择中文区下载(访问 GitHub 受限时使用)</span></span>
<span class="line"><span>export KKZONE=cn</span></span>
<span class="line"><span>curl -sfL https://get-kk.kubesphere.io | sh -</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>正确的执行结果如下</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>[root@ksp-master-1 ~]# mkdir ~/kubekey</span></span>
<span class="line"><span>[root@ksp-master-1 ~]# cd ~/kubekey/</span></span>
<span class="line"><span>[root@ksp-master-1 kubekey]# export KKZONE=cn</span></span>
<span class="line"><span>[root@ksp-master-1 kubekey]# curl -sfL https://get-kk.kubesphere.io | sh -</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Downloading kubekey v3.1.1 from https://kubernetes.pek3b.qingstor.com/kubekey/releases/download/v3.1.1/kubekey-v3.1.1-linux-amd64.tar.gz ...</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>Kubekey v3.1.1 Download Complete!</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[root@ksp-master-1 kubekey]# ll -h</span></span>
<span class="line"><span>total 114M</span></span>
<span class="line"><span>-rwxr-xr-x. 1 root root 79M Apr 16 12:30 kk</span></span>
<span class="line"><span>-rw-r--r--. 1 root root 36M Apr 25 09:37 kubekey-v3.1.1-linux-amd64.tar.gz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看 KubeKey 支持的 Kubernetes 版本列表 <strong><code>./kk version --show-supported-k8s</code></strong></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>[root@ksp-master-1 kubekey]# ./kk version --show-supported-k8s</span></span>
<span class="line"><span>v1.19.0</span></span>
<span class="line"><span>......(受限于篇幅，中间的不展示，请读者根据需求查看)</span></span>
<span class="line"><span>v1.28.0</span></span>
<span class="line"><span>v1.28.1</span></span>
<span class="line"><span>v1.28.2</span></span>
<span class="line"><span>v1.28.3</span></span>
<span class="line"><span>v1.28.4</span></span>
<span class="line"><span>v1.28.5</span></span>
<span class="line"><span>v1.28.6</span></span>
<span class="line"><span>v1.28.7</span></span>
<span class="line"><span>v1.28.8</span></span>
<span class="line"><span>v1.29.0</span></span>
<span class="line"><span>v1.29.1</span></span>
<span class="line"><span>v1.29.2</span></span>
<span class="line"><span>v1.29.3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>说明：</strong> 输出结果为 kk 支持的结果，但不代表 KubeSphere 和其他 k8s 也能完美支持。本文仅用 kk 部署 k8s，所以不用特别考虑版本的兼容性。</p></div><p>kk 支持的 k8s 版本还是比较新的。本文选择 <strong>v1.28.8</strong>，生产环境可以选择 <strong>v1.26.15</strong> 或是其他次要版本是<strong>双数</strong>，补丁版本数超过 <strong>5</strong> 的版本。不建议选择太老的版本了，毕竟 v1.30 都已经发布了。</p><h3 id="_3-2-创建-kubernetes-集群部署配置文件" tabindex="-1"><a class="header-anchor" href="#_3-2-创建-kubernetes-集群部署配置文件"><span>3.2 创建 Kubernetes 集群部署配置文件</span></a></h3><ol><li>创建集群配置文件</li></ol><p>本文选择了 k8s <strong>v1.28.8</strong>。因此，指定配置文件名称为 <strong>k8s-v1288.yaml</strong>，如果不指定，默认的文件名为 <strong>config-sample.yaml</strong>。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>./kk create config -f k8s-v1288.yaml --with-kubernetes v1.28.8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>注意：</strong> 生成的默认配置文件内容较多，这里就不做过多展示了，更多详细的配置参数请参考 官方配置示例。</p></div><ol><li>修改配置文件</li></ol><p>本文示例采用 3 个节点同时作为 control-plane、etcd 和 worker 节点。</p><p>编辑配置文件 <code>k8s-v1288.yaml</code>，主要修改 <strong>kind: Cluster</strong> 小节的相关配置</p><p>修改 <strong>kind: Cluster</strong> 小节中 hosts 和 roleGroups 等信息，修改说明如下。</p><ul><li>hosts：指定节点的 IP、ssh 用户、ssh 密码、ssh 端口</li><li>roleGroups：指定 3 个 etcd、control-plane 节点，复用相同的机器作为 3 个 worker 节点</li><li>internalLoadbalancer： 启用内置的 HAProxy 负载均衡器</li><li>domain：自定义域名 <strong>lb.opsxlab.cn</strong>，没特殊需求可使用默认值 <strong>lb.kubesphere.local</strong></li><li>clusterName：自定义 <strong>opsxlab.cn</strong>，没特殊需求可使用默认值 <strong>cluster.local</strong></li><li>autoRenewCerts：该参数可以实现证书到期自动续期，默认为 <strong>true</strong></li><li>containerManager：使用 <strong>containerd</strong></li></ul><p>修改后的完整示例如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>apiVersion: kubekey.kubesphere.io/v1alpha2</span></span>
<span class="line"><span>kind: Cluster</span></span>
<span class="line"><span>metadata:</span></span>
<span class="line"><span>  name: sample</span></span>
<span class="line"><span>spec:</span></span>
<span class="line"><span>  hosts:</span></span>
<span class="line"><span>  - {name: ksp-master-1, address: 192.168.9.131, internalAddress: 192.168.9.131, user: root, password: &quot;OpsXlab@2024&quot;}</span></span>
<span class="line"><span>  - {name: ksp-master-2, address: 192.168.9.132, internalAddress: 192.168.9.132, user: root, password: &quot;OpsXlab@2024&quot;}</span></span>
<span class="line"><span>  - {name: ksp-master-3, address: 192.168.9.133, internalAddress: 192.168.9.133, user: root, password: &quot;OpsXlab@2024&quot;}</span></span>
<span class="line"><span>  roleGroups:</span></span>
<span class="line"><span>    etcd:</span></span>
<span class="line"><span>    - ksp-master-1</span></span>
<span class="line"><span>    - ksp-master-2</span></span>
<span class="line"><span>    - ksp-master-3</span></span>
<span class="line"><span>    control-plane:</span></span>
<span class="line"><span>    - ksp-master-1</span></span>
<span class="line"><span>    - ksp-master-2</span></span>
<span class="line"><span>    - ksp-master-3</span></span>
<span class="line"><span>    worker:</span></span>
<span class="line"><span>    - ksp-master-1</span></span>
<span class="line"><span>    - ksp-master-2</span></span>
<span class="line"><span>    - ksp-master-3</span></span>
<span class="line"><span>  controlPlaneEndpoint:</span></span>
<span class="line"><span>    ## Internal loadbalancer for apiservers</span></span>
<span class="line"><span>    internalLoadbalancer: haproxy</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    domain: lb.opsxlab.cn</span></span>
<span class="line"><span>    address: &quot;&quot;</span></span>
<span class="line"><span>    port: 6443</span></span>
<span class="line"><span>  kubernetes:</span></span>
<span class="line"><span>    version: v1.28.8</span></span>
<span class="line"><span>    clusterName: opsxlab.cn</span></span>
<span class="line"><span>    autoRenewCerts: true</span></span>
<span class="line"><span>    containerManager: containerd</span></span>
<span class="line"><span>  etcd:</span></span>
<span class="line"><span>    type: kubekey</span></span>
<span class="line"><span>  network:</span></span>
<span class="line"><span>    plugin: calico</span></span>
<span class="line"><span>    kubePodsCIDR: 10.233.64.0/18</span></span>
<span class="line"><span>    kubeServiceCIDR: 10.233.0.0/18</span></span>
<span class="line"><span>    ## multus support. https://github.com/k8snetworkplumbingwg/multus-cni</span></span>
<span class="line"><span>    multusCNI:</span></span>
<span class="line"><span>      enabled: false</span></span>
<span class="line"><span>  registry:</span></span>
<span class="line"><span>    privateRegistry: &quot;&quot;</span></span>
<span class="line"><span>    namespaceOverride: &quot;&quot;</span></span>
<span class="line"><span>    registryMirrors: []</span></span>
<span class="line"><span>    insecureRegistries: []</span></span>
<span class="line"><span>  addons: []</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-部署-kubernetes" tabindex="-1"><a class="header-anchor" href="#_3-3-部署-kubernetes"><span>3.3 部署 Kubernetes</span></a></h3><p>接下来我们执行下面的命令，使用上面生成的配置文件部署 Kubernetes。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>export KKZONE=cn</span></span>
<span class="line"><span>./kk create cluster -f k8s-v1288.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的命令执行后，首先 kk 会检查部署 Kubernetes 的依赖及其他详细要求。通过检查后，系统将提示您确认安装。输入 <strong>yes</strong> 并按 ENTER 继续部署。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>[root@ksp-master-1 kubekey]# ./kk create cluster -f k8s-v1288.yaml</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span> _   __      _          _   __</span></span>
<span class="line"><span>| | / /     | |        | | / /</span></span>
<span class="line"><span>| |/ / _   _| |__   ___| |/ /  ___ _   _</span></span>
<span class="line"><span>|    \\| | | | &#39;_ \\ / _ \\    \\ / _ \\ | | |</span></span>
<span class="line"><span>| |\\  \\ |_| | |_) |  __/ |\\  \\  __/ |_| |</span></span>
<span class="line"><span>\\_| \\_/\\__,_|_.__/ \\___\\_| \\_/\\___|\\__, |</span></span>
<span class="line"><span>                                    __/ |</span></span>
<span class="line"><span>                                   |___/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>10:45:28 CST [GreetingsModule] Greetings</span></span>
<span class="line"><span>10:45:28 CST message: [ksp-master-3]</span></span>
<span class="line"><span>Greetings, KubeKey!</span></span>
<span class="line"><span>10:45:28 CST message: [ksp-master-1]</span></span>
<span class="line"><span>Greetings, KubeKey!</span></span>
<span class="line"><span>10:45:28 CST message: [ksp-master-2]</span></span>
<span class="line"><span>Greetings, KubeKey!</span></span>
<span class="line"><span>10:45:28 CST success: [ksp-master-3]</span></span>
<span class="line"><span>10:45:28 CST success: [ksp-master-1]</span></span>
<span class="line"><span>10:45:28 CST success: [ksp-master-2]</span></span>
<span class="line"><span>10:45:28 CST [NodePreCheckModule] A pre-check on nodes</span></span>
<span class="line"><span>10:45:31 CST success: [ksp-master-3]</span></span>
<span class="line"><span>10:45:31 CST success: [ksp-master-1]</span></span>
<span class="line"><span>10:45:31 CST success: [ksp-master-2]</span></span>
<span class="line"><span>10:45:31 CST [ConfirmModule] Display confirmation form</span></span>
<span class="line"><span>+--------------+------+------+---------+----------+-------+-------+---------+-----------+--------+--------+------------+------------+-------------+------------------+--------------+</span></span>
<span class="line"><span>| name         | sudo | curl | openssl | ebtables | socat | ipset | ipvsadm | conntrack | chrony | docker | containerd | nfs client | ceph client | glusterfs client | time         |</span></span>
<span class="line"><span>+--------------+------+------+---------+----------+-------+-------+---------+-----------+--------+--------+------------+------------+-------------+------------------+--------------+</span></span>
<span class="line"><span>| ksp-master-1 | y    | y    | y       | y        | y     | y     | y       | y         | y      |        |            |            |             |                  | CST 10:45:31 |</span></span>
<span class="line"><span>| ksp-master-2 | y    | y    | y       | y        | y     | y     | y       | y         | y      |        |            |            |             |                  | CST 10:45:31 |</span></span>
<span class="line"><span>| ksp-master-3 | y    | y    | y       | y        | y     | y     | y       | y         | y      |        |            |            |             |                  | CST 10:45:31 |</span></span>
<span class="line"><span>+--------------+------+------+---------+----------+-------+-------+---------+-----------+--------+--------+------------+------------+-------------+------------------+--------------+</span></span>
<span class="line"><span></span></span>
<span class="line"><span>This is a simple check of your environment.</span></span>
<span class="line"><span>Before installation, ensure that your machines meet all requirements specified at</span></span>
<span class="line"><span>https://github.com/kubesphere/kubekey#requirements-and-recommendations</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Continue this installation? [yes/no]:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>注意：</strong></p><ul><li>nfs client、ceph client、glusterfs client 3 个与存储有关的 client 显示没有安装，这个我们后期会在对接存储的实战中单独安装</li><li>docker、containerd 会根据配置文件选择的 <strong>containerManager</strong> 类型自动安装</li></ul></div><p>部署完成需要大约 10-20 分钟左右，具体看网速和机器配置，本次部署完成耗时 20 分钟。</p><p>部署完成后，您应该会在终端上看到类似于下面的输出。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>10:59:25 CST [ConfigureKubernetesModule] Configure kubernetes</span></span>
<span class="line"><span>10:59:25 CST success: [ksp-master-1]</span></span>
<span class="line"><span>10:59:25 CST skipped: [ksp-master-2]</span></span>
<span class="line"><span>10:59:25 CST skipped: [ksp-master-3]</span></span>
<span class="line"><span>10:59:25 CST [ChownModule] Chown user $HOME/.kube dir</span></span>
<span class="line"><span>10:59:26 CST success: [ksp-master-3]</span></span>
<span class="line"><span>10:59:26 CST success: [ksp-master-2]</span></span>
<span class="line"><span>10:59:26 CST success: [ksp-master-1]</span></span>
<span class="line"><span>10:59:26 CST [AutoRenewCertsModule] Generate k8s certs renew script</span></span>
<span class="line"><span>10:59:27 CST success: [ksp-master-2]</span></span>
<span class="line"><span>10:59:27 CST success: [ksp-master-3]</span></span>
<span class="line"><span>10:59:27 CST success: [ksp-master-1]</span></span>
<span class="line"><span>10:59:27 CST [AutoRenewCertsModule] Generate k8s certs renew service</span></span>
<span class="line"><span>10:59:28 CST success: [ksp-master-3]</span></span>
<span class="line"><span>10:59:28 CST success: [ksp-master-2]</span></span>
<span class="line"><span>10:59:28 CST success: [ksp-master-1]</span></span>
<span class="line"><span>10:59:28 CST [AutoRenewCertsModule] Generate k8s certs renew timer</span></span>
<span class="line"><span>10:59:29 CST success: [ksp-master-2]</span></span>
<span class="line"><span>10:59:29 CST success: [ksp-master-3]</span></span>
<span class="line"><span>10:59:29 CST success: [ksp-master-1]</span></span>
<span class="line"><span>10:59:29 CST [AutoRenewCertsModule] Enable k8s certs renew service</span></span>
<span class="line"><span>10:59:29 CST success: [ksp-master-3]</span></span>
<span class="line"><span>10:59:29 CST success: [ksp-master-2]</span></span>
<span class="line"><span>10:59:29 CST success: [ksp-master-1]</span></span>
<span class="line"><span>10:59:29 CST [SaveKubeConfigModule] Save kube config as a configmap</span></span>
<span class="line"><span>10:59:29 CST success: [LocalHost]</span></span>
<span class="line"><span>10:59:29 CST [AddonsModule] Install addons</span></span>
<span class="line"><span>10:59:29 CST success: [LocalHost]</span></span>
<span class="line"><span>10:59:29 CST Pipeline[CreateClusterPipeline] execute successfully</span></span>
<span class="line"><span>Installation is complete.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Please check the result using the command:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        kubectl get pod -A</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-验证-k8s-集群" tabindex="-1"><a class="header-anchor" href="#_4-验证-k8s-集群"><span><strong>4. 验证 k8s 集群</strong></span></a></h2><h3 id="_4-1-kubectl-命令行验证集群状态" tabindex="-1"><a class="header-anchor" href="#_4-1-kubectl-命令行验证集群状态"><span>4.1 kubectl 命令行验证集群状态</span></a></h3><p><strong>本小节只是简单的看了一下基本状态，并不全面，更多的细节大家自己体验探索吧。</strong></p><ul><li>查看集群节点信息</li></ul><p>在 master-1 节点运行 kubectl 命令获取 Kubernetes 集群上的可用节点列表。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>kubectl get nodes -o wide</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在输出结果中可以看到，当前的 Kubernetes 集群有三个可用节点、节点的内部 IP、节点角色、节点的 Kubernetes 版本号、容器运行时及版本号、操作系统类型及内核版本等信息。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>[root@ksp-master-1 kubekey]# kubectl get nodes -o wide</span></span>
<span class="line"><span>NAME           STATUS   ROLES                  AGE     VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE                    KERNEL-VERSION                       CONTAINER-RUNTIME</span></span>
<span class="line"><span>ksp-master-1   Ready    control-plane,worker   9m43s   v1.28.8   192.168.9.131   &lt;none&gt;        openEuler 22.03 (LTS-SP3)   5.10.0-182.0.0.95.oe2203sp3.x86_64   containerd://1.7.13</span></span>
<span class="line"><span>ksp-master-2   Ready    control-plane,worker   8m8s    v1.28.8   192.168.9.132   &lt;none&gt;        openEuler 22.03 (LTS-SP3)   5.10.0-182.0.0.95.oe2203sp3.x86_64   containerd://1.7.13</span></span>
<span class="line"><span>ksp-master-3   Ready    control-plane,worker   8m9s    v1.28.8   192.168.9.133   &lt;none&gt;        openEuler 22.03 (LTS-SP3)   5.10.0-182.0.0.95.oe2203sp3.x86_64   containerd://1.7.13</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看 Pod 列表</li></ul><p>输入以下命令获取在 Kubernetes 集群上运行的 Pod 列表。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>kubectl get pods -o wide -A</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在输出结果中可以看到， 所有 pod 都在运行。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>[root@ksp-master-1 kubekey]# kubectl get pod -A -o wide</span></span>
<span class="line"><span>NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE     IP              NODE        </span></span>
<span class="line"><span>kube-system   calico-kube-controllers-64f6cb8db5-fsgnq   1/1     Running   0          4m59s   10.233.84.2     ksp-master-1           </span></span>
<span class="line"><span>kube-system   calico-node-5hkm4                          1/1     Running   0          4m59s   192.168.9.133   ksp-master-3          </span></span>
<span class="line"><span>kube-system   calico-node-wqz9s                          1/1     Running   0          4m59s   192.168.9.132   ksp-master-2</span></span>
<span class="line"><span>kube-system   calico-node-zzr5n                          1/1     Running   0          4m59s   192.168.9.131   ksp-master-1</span></span>
<span class="line"><span>kube-system   coredns-76dd97cd74-66k8z                   1/1     Running   0          6m22s   10.233.84.1     ksp-master-1</span></span>
<span class="line"><span>kube-system   coredns-76dd97cd74-94kvl                   1/1     Running   0          6m22s   10.233.84.3     ksp-master-1</span></span>
<span class="line"><span>kube-system   kube-apiserver-ksp-master-1                1/1     Running   0          6m39s   192.168.9.131   ksp-master-1</span></span>
<span class="line"><span>kube-system   kube-apiserver-ksp-master-2                1/1     Running   0          4m52s   192.168.9.132   ksp-master-2</span></span>
<span class="line"><span>kube-system   kube-apiserver-ksp-master-3                1/1     Running   0          5m9s    192.168.9.133   ksp-master-3</span></span>
<span class="line"><span>kube-system   kube-controller-manager-ksp-master-1       1/1     Running   0          6m39s   192.168.9.131   ksp-master-1</span></span>
<span class="line"><span>kube-system   kube-controller-manager-ksp-master-2       1/1     Running   0          4m58s   192.168.9.132   ksp-master-2</span></span>
<span class="line"><span>kube-system   kube-controller-manager-ksp-master-3       1/1     Running   0          5m5s    192.168.9.133   ksp-master-3</span></span>
<span class="line"><span>kube-system   kube-proxy-2xpq4                           1/1     Running   0          5m3s    192.168.9.131   ksp-master-1</span></span>
<span class="line"><span>kube-system   kube-proxy-9frmd                           1/1     Running   0          5m3s    192.168.9.133   ksp-master-3</span></span>
<span class="line"><span>kube-system   kube-proxy-bhg2k                           1/1     Running   0          5m3s    192.168.9.132   ksp-master-2</span></span>
<span class="line"><span>kube-system   kube-scheduler-ksp-master-1                1/1     Running   0          6m39s   192.168.9.131   ksp-master-1</span></span>
<span class="line"><span>kube-system   kube-scheduler-ksp-master-2                1/1     Running   0          4m59s   192.168.9.132   ksp-master-2</span></span>
<span class="line"><span>kube-system   kube-scheduler-ksp-master-3                1/1     Running   0          5m5s    192.168.9.133   ksp-master-3</span></span>
<span class="line"><span>kube-system   nodelocaldns-gl6dc                         1/1     Running   0          6m22s   192.168.9.131   ksp-master-1</span></span>
<span class="line"><span>kube-system   nodelocaldns-q45jf                         1/1     Running   0          5m9s    192.168.9.133   ksp-master-3</span></span>
<span class="line"><span>kube-system   nodelocaldns-rskk5                         1/1     Running   0          5m8s    192.168.9.132   ksp-master-2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看 Image 列表</li></ul><p>输入以下命令获取在 Kubernetes 集群节点上已经下载的 Image 列表。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>[root@ksp-master-1 kubekey]# crictl images ls</span></span>
<span class="line"><span>IMAGE                                                                   TAG                 IMAGE ID            SIZE</span></span>
<span class="line"><span>registry.cn-beijing.aliyuncs.com/kubesphereio/cni                       v3.27.3             6527a35581401       88.4MB</span></span>
<span class="line"><span>registry.cn-beijing.aliyuncs.com/kubesphereio/coredns                   1.9.3               5185b96f0becf       14.8MB</span></span>
<span class="line"><span>registry.cn-beijing.aliyuncs.com/kubesphereio/k8s-dns-node-cache        1.22.20             ff71cd4ea5ae5       30.5MB</span></span>
<span class="line"><span>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-apiserver            v1.28.8             e70a71eaa5605       34.7MB</span></span>
<span class="line"><span>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-controller-manager   v1.28.8             e5ae3e4dc6566       33.5MB</span></span>
<span class="line"><span>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-controllers          v3.27.3             3e4fd05c0c1c0       33.4MB</span></span>
<span class="line"><span>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-proxy                v1.28.8             5ce97277076c6       28.1MB</span></span>
<span class="line"><span>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-scheduler            v1.28.8             ad3260645145d       18.7MB</span></span>
<span class="line"><span>registry.cn-beijing.aliyuncs.com/kubesphereio/node                      v3.27.3             5c6ffd2b2a1d0       116MB</span></span>
<span class="line"><span>registry.cn-beijing.aliyuncs.com/kubesphereio/pause                     3.9                 e6f1816883972       321kB</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，我们已经完成了部署 3 台 Master 节点 和 Worker 节点复用的最小化 Kubernetes 集群。</p><p>接下来我们将在 Kubernetes 集群上部署一个简单的 Nginx Web 服务器，测试验证 Kubernetes 集群是否正常。</p><h2 id="_5-部署测试资源" tabindex="-1"><a class="header-anchor" href="#_5-部署测试资源"><span><strong>5. 部署测试资源</strong></span></a></h2><p>本示例使用命令行工具在 Kubernetes 集群上部署一个 Nginx Web 服务器。</p><h3 id="_5-1-创建-nginx-deployment" tabindex="-1"><a class="header-anchor" href="#_5-1-创建-nginx-deployment"><span>5.1 创建 Nginx Deployment</span></a></h3><p>运行以下命令创建一个部署 Nginx Web 服务器的 Deployment。此示例中，我们将创建具有两个副本基于 nginx:alpine 镜像的 Pod。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>kubectl create deployment nginx --image=nginx:alpine --replicas=2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_5-2-创建-nginx-service" tabindex="-1"><a class="header-anchor" href="#_5-2-创建-nginx-service"><span>5.2 创建 Nginx Service</span></a></h3><p>创建一个新的 Kubernetes 服务，服务名称 nginx，服务类型 Nodeport，对外的服务端口 80。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>kubectl create service nodeport nginx --tcp=80:80</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_5-3-验证-nginx-deployment-和-pod" tabindex="-1"><a class="header-anchor" href="#_5-3-验证-nginx-deployment-和-pod"><span>5.3 验证 Nginx Deployment 和 Pod</span></a></h3><ul><li>运行以下命令查看创建的 Deployment 和 Pod 资源。</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>kubectl get deployment -o wide</span></span>
<span class="line"><span>kubectl get pods -o wide</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看结果如下：</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>[root@ksp-master-1 kubekey]# kubectl get deployment -o wide</span></span>
<span class="line"><span>NAME    READY   UP-TO-DATE   AVAILABLE   AGE   CONTAINERS   IMAGES         SELECTOR</span></span>
<span class="line"><span>nginx   2/2     2            2           20s   nginx        nginx:alpine   app=nginx</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[root@ksp-master-1 kubekey]# kubectl get pods -o wide</span></span>
<span class="line"><span>NAME                     READY   STATUS    RESTARTS   AGE   IP               NODE          NOMINATED NODE   READINESS GATES</span></span>
<span class="line"><span>nginx-6c557cc74d-tbw9c   1/1     Running   0          23s   10.233.102.187   ksp-master-2   &lt;none&gt;           &lt;none&gt;</span></span>
<span class="line"><span>nginx-6c557cc74d-xzzss   1/1     Running   0          23s   10.233.103.148   ksp-master-1   &lt;none&gt;           &lt;none&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-4-验证-nginx-service" tabindex="-1"><a class="header-anchor" href="#_5-4-验证-nginx-service"><span>5.4 验证 Nginx Service</span></a></h3><p>运行以下命令查看可用的服务列表，在列表中我们可以看到 nginx 服务类型 为 Nodeport，并在 Kubernetes 主机上开放了 <strong>30619</strong> 端口。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>kubectl get svc -o wide</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看结果如下</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>[root@ksp-master-1 kubekey]# kubectl get svc -o wide</span></span>
<span class="line"><span>NAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE     SELECTOR</span></span>
<span class="line"><span>kubernetes   ClusterIP   10.233.0.1     &lt;none&gt;        443/TCP        4d22h   &lt;none&gt;</span></span>
<span class="line"><span>nginx        NodePort    10.233.14.48   &lt;none&gt;        80:30619/TCP   5s      app=nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-5-验证服务" tabindex="-1"><a class="header-anchor" href="#_5-5-验证服务"><span>5.5 验证服务</span></a></h3><p>运行以下命令访问部署的 Nginx 服务，验证服务是否成功部署。</p><ul><li>验证直接访问 Pod</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>curl 10.233.102.187</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 访问结果如下</span></span>
<span class="line"><span>[root@ks-master-1 ~]# curl 10.233.102.187</span></span>
<span class="line"><span>&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span>&lt;html&gt;</span></span>
<span class="line"><span>&lt;head&gt;</span></span>
<span class="line"><span>&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span></span>
<span class="line"><span>&lt;style&gt;</span></span>
<span class="line"><span>html { color-scheme: light dark; }</span></span>
<span class="line"><span>body { width: 35em; margin: 0 auto;</span></span>
<span class="line"><span>font-family: Tahoma, Verdana, Arial, sans-serif; }</span></span>
<span class="line"><span>&lt;/style&gt;</span></span>
<span class="line"><span>&lt;/head&gt;</span></span>
<span class="line"><span>&lt;body&gt;</span></span>
<span class="line"><span>&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span></span>
<span class="line"><span>&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span></span>
<span class="line"><span>working. Further configuration is required.&lt;/p&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;p&gt;For online documentation and support please refer to</span></span>
<span class="line"><span>&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span></span>
<span class="line"><span>Commercial support is available at</span></span>
<span class="line"><span>&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span></span>
<span class="line"><span>&lt;/body&gt;</span></span>
<span class="line"><span>&lt;/html&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>验证访问 Service</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>curl 10.233.14.48</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 访问结果同上，略</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>验证访问 Nodeport</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>curl 192.168.9.131:30619</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 访问结果同上，略</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-自动化-shell-脚本" tabindex="-1"><a class="header-anchor" href="#_6-自动化-shell-脚本"><span><strong>6. 自动化 Shell 脚本</strong></span></a></h2><p>文章中所有操作步骤，已全部编排为自动化脚本，因篇幅限制，不在此文档中展示。</p><p>星球会员请到专属代码仓库下载（<strong>价值内容，仅星球会员专享</strong>）。</p><h2 id="_7-总结" tabindex="-1"><a class="header-anchor" href="#_7-总结"><span><strong>7. 总结</strong></span></a></h2><p>本文分享了在 openEuler 22.03 LTS SP3 操作系统上，如何利用 KubeSphere 开发的工具 <strong>KubeKey</strong>， 部署 <strong>k8s v1.28.8</strong> 集群的详细流程及注意事项。</p><p>主要内容概括如下：</p><ul><li>openEuler 22.03 LTS SP3 操作系统基础配置</li><li>openEuler 22.03 LTS SP3 操作系统上 LVM 磁盘的创建配置</li><li>使用 KubeKey 部署 Kubernetes 高可用集群</li><li>k8s 集群部署完成后的验证测试</li></ul>`,146),p=[t];function r(d,c){return e(),n("div",null,p)}const o=s(l,[["render",r],["__file","01.html.vue"]]),h=JSON.parse('{"path":"/note/kubernetes/install/kubesphere/01.html","title":"01-KubeKey 部署 Kubernetes v1.28.8 实战","lang":"zh-CN","frontmatter":{"title":"01-KubeKey 部署 Kubernetes v1.28.8 实战","order":1,"icon":"lightbulb","description":"原创 运维有术 [运维有术](javascript:void(0)😉 2024-04-25 21:27 山东 提示 2024 年云原生运维实战文档 99 篇原创计划 第 009 篇 ｜KubeSphere 最佳实战「2024」系列 第 001 篇 你好，欢迎来到运维有术。 今天分享的内容是 KubeSphere 最佳实战「2024」 系列文档中的 K...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/vuepress/note/kubernetes/install/kubesphere/01.html"}],["meta",{"property":"og:site_name","content":"风华"}],["meta",{"property":"og:title","content":"01-KubeKey 部署 Kubernetes v1.28.8 实战"}],["meta",{"property":"og:description","content":"原创 运维有术 [运维有术](javascript:void(0)😉 2024-04-25 21:27 山东 提示 2024 年云原生运维实战文档 99 篇原创计划 第 009 篇 ｜KubeSphere 最佳实战「2024」系列 第 001 篇 你好，欢迎来到运维有术。 今天分享的内容是 KubeSphere 最佳实战「2024」 系列文档中的 K..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"风华"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"01-KubeKey 部署 Kubernetes v1.28.8 实战\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"风华\\",\\"url\\":\\"/portfolio\\"}]}"]]},"headers":[{"level":2,"title":"1. 操作系统基础配置","slug":"_1-操作系统基础配置","link":"#_1-操作系统基础配置","children":[{"level":3,"title":"1.1 配置主机名","slug":"_1-1-配置主机名","link":"#_1-1-配置主机名","children":[]},{"level":3,"title":"1.2 配置 DNS","slug":"_1-2-配置-dns","link":"#_1-2-配置-dns","children":[]},{"level":3,"title":"1.3 配置服务器时区","slug":"_1-3-配置服务器时区","link":"#_1-3-配置服务器时区","children":[]},{"level":3,"title":"1.4 配置时间同步","slug":"_1-4-配置时间同步","link":"#_1-4-配置时间同步","children":[]},{"level":3,"title":"1.5 关闭系统防火墙","slug":"_1-5-关闭系统防火墙","link":"#_1-5-关闭系统防火墙","children":[]},{"level":3,"title":"1.6 禁用 SELinux","slug":"_1-6-禁用-selinux","link":"#_1-6-禁用-selinux","children":[]},{"level":3,"title":"1.7 安装系统依赖","slug":"_1-7-安装系统依赖","link":"#_1-7-安装系统依赖","children":[]}]},{"level":2,"title":"2. 操作系统磁盘配置","slug":"_2-操作系统磁盘配置","link":"#_2-操作系统磁盘配置","children":[{"level":3,"title":"2.1 使用 LVM 配置磁盘","slug":"_2-1-使用-lvm-配置磁盘","link":"#_2-1-使用-lvm-配置磁盘","children":[]},{"level":3,"title":"2.2 格式化磁盘","slug":"_2-2-格式化磁盘","link":"#_2-2-格式化磁盘","children":[]},{"level":3,"title":"2.3 磁盘挂载","slug":"_2-3-磁盘挂载","link":"#_2-3-磁盘挂载","children":[]},{"level":3,"title":"2.4 创建数据目录","slug":"_2-4-创建数据目录","link":"#_2-4-创建数据目录","children":[]}]},{"level":2,"title":"3. 安装部署 Kubernetes","slug":"_3-安装部署-kubernetes","link":"#_3-安装部署-kubernetes","children":[{"level":3,"title":"3.1 下载 KubeKey","slug":"_3-1-下载-kubekey","link":"#_3-1-下载-kubekey","children":[]},{"level":3,"title":"3.2 创建 Kubernetes 集群部署配置文件","slug":"_3-2-创建-kubernetes-集群部署配置文件","link":"#_3-2-创建-kubernetes-集群部署配置文件","children":[]},{"level":3,"title":"3.3 部署 Kubernetes","slug":"_3-3-部署-kubernetes","link":"#_3-3-部署-kubernetes","children":[]}]},{"level":2,"title":"4. 验证 k8s 集群","slug":"_4-验证-k8s-集群","link":"#_4-验证-k8s-集群","children":[{"level":3,"title":"4.1 kubectl 命令行验证集群状态","slug":"_4-1-kubectl-命令行验证集群状态","link":"#_4-1-kubectl-命令行验证集群状态","children":[]}]},{"level":2,"title":"5. 部署测试资源","slug":"_5-部署测试资源","link":"#_5-部署测试资源","children":[{"level":3,"title":"5.1 创建 Nginx Deployment","slug":"_5-1-创建-nginx-deployment","link":"#_5-1-创建-nginx-deployment","children":[]},{"level":3,"title":"5.2 创建 Nginx Service","slug":"_5-2-创建-nginx-service","link":"#_5-2-创建-nginx-service","children":[]},{"level":3,"title":"5.3 验证 Nginx Deployment 和 Pod","slug":"_5-3-验证-nginx-deployment-和-pod","link":"#_5-3-验证-nginx-deployment-和-pod","children":[]},{"level":3,"title":"5.4 验证 Nginx Service","slug":"_5-4-验证-nginx-service","link":"#_5-4-验证-nginx-service","children":[]},{"level":3,"title":"5.5 验证服务","slug":"_5-5-验证服务","link":"#_5-5-验证服务","children":[]}]},{"level":2,"title":"6. 自动化 Shell 脚本","slug":"_6-自动化-shell-脚本","link":"#_6-自动化-shell-脚本","children":[]},{"level":2,"title":"7. 总结","slug":"_7-总结","link":"#_7-总结","children":[]}],"git":{},"readingTime":{"minutes":13.7,"words":4109},"filePathRelative":"note/kubernetes/install/kubesphere/01.md","autoDesc":true}');export{o as comp,h as data};

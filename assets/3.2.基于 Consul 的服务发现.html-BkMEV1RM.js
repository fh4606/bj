import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as a,d as e}from"./app-cGHsJGw-.js";const i="/vuepress/assets/2023-10-28_204827_4327990.49604693523866517-qBo1D2Bv.png",t="/vuepress/assets/2023-10-28_204827_5312290.5002782752894944-XaNwFYKj.png",l="/vuepress/assets/2023-10-28_204827_5965310.21110965001852-DFARw1aa.png",p="/vuepress/assets/2023-10-28_204827_4751420.7173634304255192-DTqHqUUl.png",o="/vuepress/assets/2023-10-28_204827_4190160.7686160729020021-CiwhlnMl.png",u={},r=e(`<h1 id="一、环境" tabindex="-1"><a class="header-anchor" href="#一、环境"><span>一、环境</span></a></h1><table id="fa41b022" class="ne-table" style="table-layout:fixed;border-collapse:collapse;border:1px solid #d9d9d9;width:748px;"><tbody><tr style="height:33px;"><td width="187" style="border:1px solid #d9d9d9;"><p id="uf3a20357" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">主机名</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u5779852f" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">IP地址</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u32a0c572" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">系统</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="uf0e4c9eb" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">说明</span></p></td></tr><tr style="height:33px;"><td width="187" style="border:1px solid #d9d9d9;"><p id="u5ea1f6ab" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">localhost</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u0147a709" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">192.168.11.61</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u6019d609" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">Ubuntu 20.04</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u76f2bd9f" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">docker安装的prometheus</span></p></td></tr><tr style="height:33px;"><td width="187" style="border:1px solid #d9d9d9;"><p id="u38238261" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">test</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u11962964" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">192.168.11.62</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u9ac916c5" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">Ubuntu 20.04</span></p></td><td width="187" style="border:1px solid #d9d9d9;"></td></tr></tbody></table><h1 id="二、基于-consul-的服务发现" tabindex="-1"><a class="header-anchor" href="#二、基于-consul-的服务发现"><span>二、基于 Consul 的服务发现</span></a></h1><p><a href="https://www.consul.io/" target="_blank" rel="noopener noreferrer">Consul</a> 是由 <a href="https://www.hashicorp.com/" target="_blank" rel="noopener noreferrer">HashiCorp</a> 开发的一个支持多数据中心的分布式服务发现和键值对存储服务的开源软件，是一个通用的服务发现和注册中心工具，被大量应用于基于微服务的软件架构当中。</p><p>我们通过api将exporter服务注册到 Consul，然后配置 Prometheus 从 Consul 中发现实例。关于 Consul 本身的使用可以查看官方文档 <a href="https://learn.hashicorp.com/consul" target="_blank" rel="noopener noreferrer">https://learn.hashicorp.com/consul</a> 了解更多。</p><h2 id="_1、二进制安装配置-consul-二选一" tabindex="-1"><a class="header-anchor" href="#_1、二进制安装配置-consul-二选一"><span>1、二进制安装配置 Consul（二选一）</span></a></h2><p>在页面 <a href="https://www.consul.io/downloads" target="_blank" rel="noopener noreferrer">https://www.consul.io/downloads</a> 下载符合自己系统的安装文件，比如我们这里是 Linux 系统，使用下面命令下载安装即可：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>wget https://releases.hashicorp.com/consul/1.14.5/consul_1.14.5_linux_amd64.zip</span></span>
<span class="line"><span></span></span>
<span class="line"><span>apt install unzip -y</span></span>
<span class="line"><span></span></span>
<span class="line"><span>unzip consul_1.14.5_linux_amd64.zip</span></span>
<span class="line"><span></span></span>
<span class="line"><span>mv consul /usr/local/bin</span></span>
<span class="line"><span>consul version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动consul" tabindex="-1"><a class="header-anchor" href="#启动consul"><span>启动consul</span></a></h3><p>为了查看更多的日志信息，我们可以在 dev 模式下运行 Consul，如下所示：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>consul agent -dev -client 0.0.0.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>启动命令后面使用 <code>-client</code> 参数指定了客户端绑定的 IP 地址，默认为 <code>127.0.0.1</code></p><h2 id="_2、docker安装consul二选一" tabindex="-1"><a class="header-anchor" href="#_2、docker安装consul二选一"><span>2、docker安装Consul二选一）</span></a></h2><p>docker运行</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker run -d --name consul -p 8500:8500 consul:1.14.5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>检查</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker ps</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_3、consul-http访问地址" tabindex="-1"><a class="header-anchor" href="#_3、consul-http访问地址"><span>3、consul http访问地址</span></a></h2><p><a href="http://192.168.11.61:8500/ui/dc1/services" target="_blank" rel="noopener noreferrer">http://192.168.11.61:8500/ui/dc1/services</a></p><h2 id="_4、通过api注册到consul" tabindex="-1"><a class="header-anchor" href="#_4、通过api注册到consul"><span>4、通过api注册到Consul</span></a></h2><p>使用命令行注册</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;node1&quot;,&quot;name&quot;: &quot;node_exporter&quot;,&quot;address&quot;: &quot;node_exporter&quot;,&quot;port&quot;: 9100,&quot;tags&quot;: [&quot;exporter&quot;],&quot;meta&quot;: {&quot;job&quot;: &quot;node_exporter&quot;,&quot;instance&quot;: &quot;Prometheus服务器&quot;},&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.61:9100/metrics&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>把json数据放在文件中，使用这个json文件注册</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>mkdir /data/consul</span></span>
<span class="line"><span>cd /data/consul</span></span>
<span class="line"><span></span></span>
<span class="line"><span>cat &gt; node_exporter.json&lt;&lt;&quot;EOF&quot;</span></span>
<span class="line"><span>  {</span></span>
<span class="line"><span>    &quot;id&quot;: &quot;node2&quot;,</span></span>
<span class="line"><span>    &quot;name&quot;: &quot;node_exporter&quot;,</span></span>
<span class="line"><span>    &quot;address&quot;: &quot;192.168.11.62&quot;,</span></span>
<span class="line"><span>    &quot;port&quot;: 9100,</span></span>
<span class="line"><span>    &quot;tags&quot;: [&quot;exporter&quot;],</span></span>
<span class="line"><span>    &quot;meta&quot;: {</span></span>
<span class="line"><span>      &quot;job&quot;: &quot;node_exporter&quot;,</span></span>
<span class="line"><span>      &quot;instance&quot;: &quot;test服务器&quot;</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    &quot;checks&quot;: [{</span></span>
<span class="line"><span>      &quot;http&quot;: &quot;http://192.168.11.62:9100/metrics&quot;,</span></span>
<span class="line"><span>      &quot;interval&quot;: &quot;10s&quot;</span></span>
<span class="line"><span>    }]</span></span>
<span class="line"><span>  } </span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用json文件注册</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>curl --request PUT --data @node_exporter.json http://localhost:8500/v1/agent/service/register</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>除了我们注册的 2 个 demo 服务之外，Consul agent 还会将自己注册为一个名为 <code>consul</code> 的服务，我们可以在浏览器中访问 <code>http://192.168.11.61:8500</code> 查看注册的服务。</p><figure><img src="`+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在 Consul UI 页面中可以看到有 <code>consul</code> 和 <code>node_exporter</code> 两个 Service 服务。</p><h2 id="_5、配置-prometheus" tabindex="-1"><a class="header-anchor" href="#_5、配置-prometheus"><span>5、配置 Prometheus</span></a></h2><p>上面我们通过 Consul 注册了 2 个 node_exporter 服务，接下来我们将配置 Prometheus 通过 Consul 来自动发现 node_porter服务。</p><p>在 Prometheus 的配置文件 <code>prometheus.yml</code> 文件中的 <code>scrape_configs</code> 部分添加如下所示的抓取配置：</p><p>备份源文件</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>cd /data/docker-prometheus</span></span>
<span class="line"><span>cp -a prometheus/prometheus.yml prometheus/prometheus.yml.bak</span></span>
<span class="line"><span>ls -l prometheus/prometheus.yml.bak</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用cat去掉之前的配置,使用下面的配置</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt; prometheus/prometheus.yml&lt;&lt;&quot;EOF&quot;     </span></span>
<span class="line"><span># 全局配置</span></span>
<span class="line"><span>global:</span></span>
<span class="line"><span>  scrape_interval:     15s # 将搜刮间隔设置为每15秒一次。默认是每1分钟一次。</span></span>
<span class="line"><span>  evaluation_interval: 15s # 每15秒评估一次规则。默认是每1分钟一次。</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Alertmanager 配置</span></span>
<span class="line"><span>alerting:</span></span>
<span class="line"><span>  alertmanagers:</span></span>
<span class="line"><span>  - static_configs:</span></span>
<span class="line"><span>    - targets: [&#39;alertmanager:9093&#39;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 报警(触发器)配置</span></span>
<span class="line"><span>rule_files:</span></span>
<span class="line"><span>  - &quot;alert.yml&quot;</span></span>
<span class="line"><span>  - &quot;rules/*.yml&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 搜刮配置</span></span>
<span class="line"><span>scrape_configs:</span></span>
<span class="line"><span>  - job_name: &#39;prometheus&#39;</span></span>
<span class="line"><span>    # 覆盖全局默认值，每15秒从该作业中刮取一次目标</span></span>
<span class="line"><span>    scrape_interval: 15s</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>    - targets: [&#39;localhost:9090&#39;]</span></span>
<span class="line"><span>  - job_name: &#39;alertmanager&#39;</span></span>
<span class="line"><span>    # 覆盖全局默认值，每15秒从该作业中刮取一次目标</span></span>
<span class="line"><span>    scrape_interval: 15s</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>    - targets: [&#39;alertmanager:9093&#39;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  - job_name: &#39;consul_exporter&#39;</span></span>
<span class="line"><span>    consul_sd_configs:</span></span>
<span class="line"><span>      - server: &#39;192.168.11.61:8500&#39;</span></span>
<span class="line"><span>        services: []</span></span>
<span class="line"><span>    relabel_configs:</span></span>
<span class="line"><span>      - source_labels: [__meta_consul_tags]</span></span>
<span class="line"><span>        regex: .*exporter.*</span></span>
<span class="line"><span>        action: keep</span></span>
<span class="line"><span>      - regex: __meta_consul_service_metadata_(.+)</span></span>
<span class="line"><span>        action: labelmap</span></span>
<span class="line"><span>#  Spring Boot 2.x 应用数据采集配置</span></span>
<span class="line"><span>  - job_name: &#39;consul_springboot_demo&#39;</span></span>
<span class="line"><span>    metrics_path: &#39;/actuator/prometheus&#39;</span></span>
<span class="line"><span>    scrape_interval: 5s</span></span>
<span class="line"><span>    consul_sd_configs:</span></span>
<span class="line"><span>      - server: &#39;192.168.11.61:8500&#39;</span></span>
<span class="line"><span>        services: []</span></span>
<span class="line"><span>    relabel_configs:</span></span>
<span class="line"><span>      - source_labels: [__meta_consul_tags]</span></span>
<span class="line"><span>        regex: .*springboot.*</span></span>
<span class="line"><span>        action: keep</span></span>
<span class="line"><span>      - regex: __meta_consul_service_metadata_(.+)</span></span>
<span class="line"><span>        action: labelmap</span></span>
<span class="line"><span>#http配置</span></span>
<span class="line"><span>  - job_name: &quot;consul-blackbox_http&quot;</span></span>
<span class="line"><span>    metrics_path: /probe</span></span>
<span class="line"><span>    params:</span></span>
<span class="line"><span>      module: [http_2xx]</span></span>
<span class="line"><span>    consul_sd_configs:</span></span>
<span class="line"><span>      - server: &#39;192.168.11.61:8500&#39;</span></span>
<span class="line"><span>        services: []</span></span>
<span class="line"><span>    relabel_configs:</span></span>
<span class="line"><span>      - source_labels: [__meta_consul_tags]</span></span>
<span class="line"><span>        regex: .*blackbox_http.*</span></span>
<span class="line"><span>        action: keep</span></span>
<span class="line"><span>      - regex: __meta_consul_service_metadata_(.+)</span></span>
<span class="line"><span>        action: labelmap</span></span>
<span class="line"><span>      - source_labels: [__meta_consul_service_address]</span></span>
<span class="line"><span>        target_label: __param_target</span></span>
<span class="line"><span>      - source_labels: [__param_target]</span></span>
<span class="line"><span>        target_label: instance</span></span>
<span class="line"><span>      - target_label: __address__</span></span>
<span class="line"><span>        replacement: 192.168.11.62:9115</span></span>
<span class="line"><span>#tcp检查配置</span></span>
<span class="line"><span>  - job_name: &quot;consul_blackbox_tcp&quot;</span></span>
<span class="line"><span>    metrics_path: /probe</span></span>
<span class="line"><span>    params:</span></span>
<span class="line"><span>      module: [tcp_connect]</span></span>
<span class="line"><span>    consul_sd_configs:</span></span>
<span class="line"><span>      - server: &#39;192.168.11.61:8500&#39;</span></span>
<span class="line"><span>        services: []</span></span>
<span class="line"><span>    relabel_configs:</span></span>
<span class="line"><span>      - source_labels: [__meta_consul_tags]</span></span>
<span class="line"><span>        regex: .*blackbox_tcp.*</span></span>
<span class="line"><span>        action: keep</span></span>
<span class="line"><span>      - regex: __meta_consul_service_metadata_(.+)</span></span>
<span class="line"><span>        action: labelmap</span></span>
<span class="line"><span>      - source_labels: [__meta_consul_service_address]</span></span>
<span class="line"><span>        target_label: __param_target</span></span>
<span class="line"><span>      - source_labels: [__param_target]</span></span>
<span class="line"><span>        target_label: instance</span></span>
<span class="line"><span>      - target_label: __address__</span></span>
<span class="line"><span>        replacement: 192.168.11.62:9115</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#icmp检查配置</span></span>
<span class="line"><span>  - job_name: &quot;consul_blackbox_icmp&quot;</span></span>
<span class="line"><span>    metrics_path: /probe</span></span>
<span class="line"><span>    params:</span></span>
<span class="line"><span>      module: [icmp]</span></span>
<span class="line"><span>    consul_sd_configs:</span></span>
<span class="line"><span>      - server: &#39;192.168.11.61:8500&#39;</span></span>
<span class="line"><span>        services: []</span></span>
<span class="line"><span>    relabel_configs:</span></span>
<span class="line"><span>      - source_labels: [__meta_consul_tags]</span></span>
<span class="line"><span>        regex: .*blackbox_icmp.*</span></span>
<span class="line"><span>        action: keep</span></span>
<span class="line"><span>      - regex: __meta_consul_service_metadata_(.+)</span></span>
<span class="line"><span>        action: labelmap</span></span>
<span class="line"><span>      - source_labels: [__meta_consul_service_address]</span></span>
<span class="line"><span>        target_label: __param_target</span></span>
<span class="line"><span>      - source_labels: [__param_target]</span></span>
<span class="line"><span>        target_label: instance</span></span>
<span class="line"><span>      - target_label: __address__</span></span>
<span class="line"><span>        replacement: 192.168.11.62:9115</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#域名检测</span></span>
<span class="line"><span>  - job_name: consul_domain_exporter</span></span>
<span class="line"><span>    scrape_interval: 10s</span></span>
<span class="line"><span>    metrics_path: /probe</span></span>
<span class="line"><span>    consul_sd_configs:</span></span>
<span class="line"><span>      - server: &#39;192.168.11.61:8500&#39;</span></span>
<span class="line"><span>        services: []</span></span>
<span class="line"><span>    relabel_configs:</span></span>
<span class="line"><span>      - source_labels: [__meta_consul_tags]</span></span>
<span class="line"><span>        regex: .*domain.*</span></span>
<span class="line"><span>        action: keep</span></span>
<span class="line"><span>      - regex: __meta_consul_service_metadata_(.+)</span></span>
<span class="line"><span>        action: labelmap</span></span>
<span class="line"><span>      - source_labels: [__meta_consul_service_address]</span></span>
<span class="line"><span>        target_label: __param_target</span></span>
<span class="line"><span>      - target_label: __address__</span></span>
<span class="line"><span>        replacement: 192.168.11.62:9222</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 <code>consul_sd_configs</code> 配置用于自动发现的 Consul 服务地址，服务名为[]，我们通过relabel_configs的过滤规则只接收指定的exporter</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>curl -X POST http://localhost:9090/-/reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>配置完成后重新启动 Prometheus，然后重新查看 Prometheus 页面上的 <code>targets</code> 页面，验证上面的配置是否存在：</p><p><a href="http://192.168.11.61:9090/targets" target="_blank" rel="noopener noreferrer">http://192.168.11.61:9090/targets</a></p><figure><img src="`+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>正常情况下是可以看到会有一个 <code>exporter</code> 的任务，下面有 2 个自动发现的抓取目标。</p><h2 id="_6、创建添加脚本" tabindex="-1"><a class="header-anchor" href="#_6、创建添加脚本"><span>6、创建添加脚本</span></a></h2><p>使用预先准备好的脚本，一次添加多个targets:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt;/data/consul/api.sh &lt;&lt;&quot;EOF&quot;</span></span>
<span class="line"><span>#nginx</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;nginx1&quot;,&quot;name&quot;: &quot;nginx_exporter&quot;,&quot;address&quot;: &quot;192.168.11.62&quot;,&quot;port&quot;: 9113,&quot;tags&quot;: [&quot;exporter&quot;],&quot;meta&quot;: {&quot;job&quot;: &quot;nginx_exporter&quot;,&quot;instance&quot;: &quot;test服务器&quot;,&quot;env&quot;:&quot;test&quot;},&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.62:9113/metrics&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#rabbitmq</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;rabbitmq1&quot;,&quot;name&quot;: &quot;rabbitmq_exporter&quot;,&quot;address&quot;: &quot;192.168.11.62&quot;,&quot;port&quot;: 9419,&quot;tags&quot;: [&quot;exporter&quot;],&quot;meta&quot;: {&quot;job&quot;: &quot;rabbitmq_exporter&quot;,&quot;instance&quot;: &quot;test服务器&quot;,&quot;env&quot;:&quot;test&quot;},&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.62:9419/metrics&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#redis</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;redis1&quot;,&quot;name&quot;: &quot;redis_exporter&quot;,&quot;address&quot;: &quot;192.168.11.62&quot;,&quot;port&quot;: 9121,&quot;tags&quot;: [&quot;exporter&quot;],&quot;meta&quot;: {&quot;job&quot;: &quot;redis_exporter&quot;,&quot;instance&quot;: &quot;test服务器&quot;,&quot;env&quot;:&quot;test&quot;},&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.62:9121/metrics&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#mongodb</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;mongodb1&quot;,&quot;name&quot;: &quot;mongodb_exporter&quot;,&quot;address&quot;: &quot;192.168.11.62&quot;,&quot;port&quot;: 9216,&quot;tags&quot;: [&quot;exporter&quot;],&quot;meta&quot;: {&quot;job&quot;: &quot;mongodb_exporter&quot;,&quot;instance&quot;: &quot;test服务器&quot;,&quot;env&quot;:&quot;test&quot;},&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.62:9216/metrics&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#mysql</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;mysql1&quot;,&quot;name&quot;: &quot;mysqld_exporter&quot;,&quot;address&quot;: &quot;192.168.11.62&quot;,&quot;port&quot;: 9104,&quot;tags&quot;: [&quot;exporter&quot;],&quot;meta&quot;: {&quot;job&quot;: &quot;mysqld_exporter&quot;,&quot;instance&quot;: &quot;test服务器&quot;,&quot;env&quot;:&quot;test&quot;},&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.62:9104/metrics&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#cadvisor</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;cadvisor1&quot;,&quot;name&quot;: &quot;cadvisor&quot;,&quot;address&quot;: &quot;cadvisor&quot;,&quot;port&quot;: 8080,&quot;tags&quot;: [&quot;exporter&quot;],&quot;meta&quot;: {&quot;job&quot;: &quot;cadvisor&quot;,&quot;instance&quot;: &quot;Prometheus服务器&quot;,&quot;env&quot;:&quot;test&quot;},&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.61:8080/metrics&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;cadvisor2&quot;,&quot;name&quot;: &quot;cadvisor&quot;,&quot;address&quot;: &quot;192.168.11.62&quot;,&quot;port&quot;: 8080,&quot;tags&quot;: [&quot;exporter&quot;],&quot;meta&quot;: {&quot;job&quot;: &quot;cadvisor&quot;,&quot;instance&quot;: &quot;test服务器&quot;,&quot;env&quot;:&quot;test&quot;},&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.62:8080/metrics&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#springboot</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;springboot1&quot;,&quot;name&quot;: &quot;springboot&quot;,&quot;address&quot;: &quot;192.168.11.62&quot;,&quot;port&quot;: 8081,&quot;tags&quot;: [&quot;springboot&quot;],&quot;meta&quot;: {&quot;job&quot;: &quot;springboot&quot;,&quot;instance&quot;: &quot;test服务器&quot;,&quot;env&quot;:&quot;test&quot;},&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.62:8081/actuator/prometheus&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>#process_exporter</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;process1&quot;,&quot;name&quot;: &quot;process_exporter&quot;,&quot;address&quot;: &quot;192.168.11.62&quot;,&quot;port&quot;: 9256,&quot;tags&quot;: [&quot;exporter&quot;],&quot;meta&quot;: {&quot;job&quot;: &quot;process_exporter&quot;,&quot;instance&quot;: &quot;test服务器&quot;,&quot;env&quot;:&quot;test&quot;},&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.62:9256/metrics&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#http</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;http1&quot;,&quot;name&quot;: &quot;blackbox_http&quot;,&quot;address&quot;: &quot;https://www.jd.com&quot;,&quot;tags&quot;: [&quot;blackbox_http&quot;],&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.62:9115&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#tcp</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;tcp1&quot;,&quot;name&quot;: &quot;blackbox_tcp&quot;,&quot;address&quot;: &quot;192.168.11.61:9090&quot;,&quot;tags&quot;: [&quot;blackbox_tcp&quot;],&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.62:9115&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#icmp</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;icmp1&quot;,&quot;name&quot;: &quot;blackbox_icmp&quot;,&quot;address&quot;: &quot;192.168.11.62&quot;,&quot;tags&quot;: [&quot;blackbox_icmp&quot;],&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.62:9115&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>#domin</span></span>
<span class="line"><span>curl -X PUT -d &#39;{&quot;id&quot;: &quot;domain1&quot;,&quot;name&quot;: &quot;domain_exporter&quot;,&quot;address&quot;: &quot;baidu.com&quot;,&quot;tags&quot;: [&quot;domain&quot;],&quot;checks&quot;: [{&quot;http&quot;: &quot;http://192.168.11.62:9222&quot;, &quot;interval&quot;: &quot;5s&quot;}]}&#39;  http://localhost:8500/v1/agent/service/register</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行脚本</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sh /data/consul/api.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>检查</p><p><a href="http://192.168.11.61:9090/targets" target="_blank" rel="noopener noreferrer">http://192.168.11.61:9090/targets</a></p><h2 id="_7、consul删除服务" tabindex="-1"><a class="header-anchor" href="#_7、consul删除服务"><span>7、consul删除服务</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>curl --request PUT http://127.0.0.1:8500/v1/agent/service/deregister/ID</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_8、问题" tabindex="-1"><a class="header-anchor" href="#_8、问题"><span>8、问题</span></a></h2><p>consul健康检查失败如下图：</p><figure><img src="`+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>原因：</p><p>是因为并没有把8080映射出来（下图显示），导致consul监控检查不通过，所以报错。</p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="解决" tabindex="-1"><a class="header-anchor" href="#解决"><span>解决</span></a></h3><p>修改<code>docker-compose.yaml</code>文件把8080端口映射出来，就好了，如下图：</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>修改完成后，执行命令</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker-compose up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="三、consulmanager" tabindex="-1"><a class="header-anchor" href="#三、consulmanager"><span>三、ConsulManager</span></a></h1><p><a href="https://gitee.com/starsl/ConsulManager" target="_blank" rel="noopener noreferrer">官方gitee地址</a></p><p>1、ConsulManager需要依赖<code>Consul</code>，请先完成Consul的部署。（暂时最高支持Consul v1.14.5）（<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fstarsliao%2FConsulManager%2Fblob%2Fmain%2Fdocs%2FConsul%E9%83%A8%E7%BD%B2%E8%AF%B4%E6%98%8E.md" target="_blank" rel="noopener noreferrer">docs/Consul部署说明.md</a>）</p><p>2、使用<code>docker-compose</code>来部署ConsulManager</p><ul><li><p>下载：<code>wget https://starsl.cn/static/img/docker-compose.yml</code>（仓库根目录下<code>docker-compose.yml</code>）</p></li><li><p>编辑：</p></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>vim docker-compose.yml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>修改3个环境变量：<br><code>**consul_token**</code>：consul的登录token（<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fstarsliao%2FConsulManager%2Fblob%2Fmain%2Fdocs%2FConsul%E9%83%A8%E7%BD%B2%E8%AF%B4%E6%98%8E.md%23%E8%8E%B7%E5%8F%96%E7%99%BB%E5%BD%95token%E8%AE%B0%E5%BD%95secretid%E5%8D%B3%E4%B8%BAconsul%E7%99%BB%E5%BD%95%E7%9A%84token" target="_blank" rel="noopener noreferrer">如何获取？</a>）,当然也可以不获取token，这样consul使用无密码登录（不安全）。<br><code>**consul_url**</code>：consul的URL(http开头，/v1要保留)<br><code>**admin_passwd**</code>：登录ConsulManager Web的admin密码</p><ul><li><p>启动：<code>docker-compose pull &amp;&amp; docker-compose up -d</code></p></li><li><p>访问：<code>http://{IP}:1026</code>，使用配置的变量 <code>**admin_passwd**</code> 登录</p></li><li><p><strong>安装使用中遇到问题，请参考：</strong><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fstarsliao%2FConsulManager%2Fblob%2Fmain%2Fdocs%2FFAQ.md" target="_blank" rel="noopener noreferrer"><strong>FAQ</strong></a></p></li></ul>',70),d=[r];function c(v,q){return a(),n("div",null,d)}const b=s(u,[["render",c],["__file","3.2.基于 Consul 的服务发现.html.vue"]]),g=JSON.parse('{"path":"/note/Prometheus/3.2.%E5%9F%BA%E4%BA%8E%20Consul%20%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0.html","title":"3.2.基于 Consul 的服务发现","lang":"zh-CN","frontmatter":{"title":"3.2.基于 Consul 的服务发现","order":22,"icon":"lightbulb","description":"一、环境 二、基于 Consul 的服务发现 Consul 是由 HashiCorp 开发的一个支持多数据中心的分布式服务发现和键值对存储服务的开源软件，是一个通用的服务发现和注册中心工具，被大量应用于基于微服务的软件架构当中。 我们通过api将exporter服务注册到 Consul，然后配置 Prometheus 从 Consul 中发现实例。关于...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/vuepress/note/Prometheus/3.2.%E5%9F%BA%E4%BA%8E%20Consul%20%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0.html"}],["meta",{"property":"og:site_name","content":"风华"}],["meta",{"property":"og:title","content":"3.2.基于 Consul 的服务发现"}],["meta",{"property":"og:description","content":"一、环境 二、基于 Consul 的服务发现 Consul 是由 HashiCorp 开发的一个支持多数据中心的分布式服务发现和键值对存储服务的开源软件，是一个通用的服务发现和注册中心工具，被大量应用于基于微服务的软件架构当中。 我们通过api将exporter服务注册到 Consul，然后配置 Prometheus 从 Consul 中发现实例。关于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"风华"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3.2.基于 Consul 的服务发现\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"风华\\",\\"url\\":\\"/portfolio\\"}]}"]]},"headers":[{"level":2,"title":"1、二进制安装配置 Consul（二选一）","slug":"_1、二进制安装配置-consul-二选一","link":"#_1、二进制安装配置-consul-二选一","children":[{"level":3,"title":"启动consul","slug":"启动consul","link":"#启动consul","children":[]}]},{"level":2,"title":"2、docker安装Consul二选一）","slug":"_2、docker安装consul二选一","link":"#_2、docker安装consul二选一","children":[]},{"level":2,"title":"3、consul http访问地址","slug":"_3、consul-http访问地址","link":"#_3、consul-http访问地址","children":[]},{"level":2,"title":"4、通过api注册到Consul","slug":"_4、通过api注册到consul","link":"#_4、通过api注册到consul","children":[]},{"level":2,"title":"5、配置 Prometheus","slug":"_5、配置-prometheus","link":"#_5、配置-prometheus","children":[]},{"level":2,"title":"6、创建添加脚本","slug":"_6、创建添加脚本","link":"#_6、创建添加脚本","children":[]},{"level":2,"title":"7、consul删除服务","slug":"_7、consul删除服务","link":"#_7、consul删除服务","children":[]},{"level":2,"title":"8、问题","slug":"_8、问题","link":"#_8、问题","children":[{"level":3,"title":"解决","slug":"解决","link":"#解决","children":[]}]}],"git":{},"readingTime":{"minutes":7.61,"words":2284},"filePathRelative":"note/Prometheus/3.2.基于 Consul 的服务发现.md","autoDesc":true}');export{b as comp,g as data};

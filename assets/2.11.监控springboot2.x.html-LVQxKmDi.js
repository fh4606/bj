import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as n,d as e}from"./app-DZWWIkr0.js";const i="/bj/assets/2023-10-28_202232_3157980.3417943973584434-fzbfidHN.png",l={},p=e(`<h1 id="一、环境" tabindex="-1"><a class="header-anchor" href="#一、环境"><span>一、环境</span></a></h1><table id="b9e1772c" class="ne-table" style="table-layout:fixed;border-collapse:collapse;border:1px solid #d9d9d9;width:748px;"><tbody><tr style="height:33px;"><td width="187" style="border:1px solid #d9d9d9;"><p id="u2e3cf93f" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">主机名</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="ue6f168f1" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">IP地址</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u700b7258" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">系统</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="ua982b0d3" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">说明</span></p></td></tr><tr style="height:33px;"><td width="187" style="border:1px solid #d9d9d9;"><p id="u14b7e0ed" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">localhost</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u9f37cc33" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">192.168.11.61</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="ue4b92393" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">Ubuntu 20.04</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u7edcbe55" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">docker安装的prometheus</span></p></td></tr><tr style="height:33px;"><td width="187" style="border:1px solid #d9d9d9;"><p id="ufbbbbfd0" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">test</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u30c179e4" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">192.168.11.62</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u2eec3b06" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">Ubuntu 20.04</span></p></td><td width="187" style="border:1px solid #d9d9d9;"><p id="u911f7713" class="ne-p" style="margin:0;padding:0;min-height:24px;"><span class="ne-text">springboot2.x 应用启动端口8080，jdk1.8</span></p></td></tr></tbody></table><h2 id="_1、环境搭建" tabindex="-1"><a class="header-anchor" href="#_1、环境搭建"><span>1、环境搭建</span></a></h2><h3 id="docker安装" tabindex="-1"><a class="header-anchor" href="#docker安装"><span>docker安装</span></a></h3><p>略</p><h3 id="docker-compose安装" tabindex="-1"><a class="header-anchor" href="#docker-compose安装"><span>docker-compose安装</span></a></h3><p>略</p><h3 id="java环境" tabindex="-1"><a class="header-anchor" href="#java环境"><span>java环境</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt install openjdk-8-jdk -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="二、监控java应用-tomcat-jar" tabindex="-1"><a class="header-anchor" href="#二、监控java应用-tomcat-jar"><span>二、监控java应用(tomcat/jar)</span></a></h1><p><a href="https://github.com/prometheus/jmx_exporter" target="_blank" rel="noopener noreferrer">JMX exporter</a> 负责收集 Java 虚拟机信息</p><p>进入到tomcat安装目录，vim</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>PROMETHEUS_JMX_EXPORTER_OPTS=&quot;-javaagent:../prometheus-exporter/jmx_prometheus_javaagent-0.18.0.jar=12345:../prometheus-exporter/tomcat.yml&quot;</span></span>
<span class="line"><span>JAVA_OPTS=&quot;-Xmx4096m -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=2048m -Xss1024K $PROMETHEUS_JMX_EXPORTER_OPTS&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="三、监控java应用-springboot" tabindex="-1"><a class="header-anchor" href="#三、监控java应用-springboot"><span>三、监控java应用(springboot)</span></a></h1><p>分4个步骤</p><p>1、引入maven依赖</p><p>2、application.propertiesl配置</p><p>3、prometheus配置采集springboot2.x应用提供的监控样本数据</p><p>4、grafana将prometheus作为数据源进行可视化展示</p><h2 id="_1、springboot项目-二选一" tabindex="-1"><a class="header-anchor" href="#_1、springboot项目-二选一"><span>1、springboot项目(二选一)</span></a></h2><h3 id="引入maven依赖" tabindex="-1"><a class="header-anchor" href="#引入maven依赖"><span>引入maven依赖</span></a></h3><p>修改pom.xml添加如下代码，引入Spring Boot Actuator的相关依赖。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;!-- spring-boot-actuator依赖 --&gt;</span></span>
<span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span>
<span class="line"><span>&lt;!-- prometheus依赖 --&gt;</span></span>
<span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;io.micrometer&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;micrometer-registry-prometheus&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="application-propertiesl配置" tabindex="-1"><a class="header-anchor" href="#application-propertiesl配置"><span>application.propertiesl配置</span></a></h3><p>在application.properties中添加相关配置暴露监测数据端口,如果是application.yaml格式，需要转成yaml</p><p>出于安全考虑，默认情况下除了/health和/info之外的所有actuator都是关闭的</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>server.port=8081</span></span>
<span class="line"><span>spring.application.name=springboot-demo</span></span>
<span class="line"><span></span></span>
<span class="line"><span>management.endpoints.web.exposure.include=prometheus,health</span></span>
<span class="line"><span>#management.endpoints.web.exposure.include=*</span></span>
<span class="line"><span>#management.endpoints.web.exposure.exclude=env,beans</span></span>
<span class="line"><span>management.metrics.tags.application=\${spring.application.name}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、使用现成的springboot项目-二选一" tabindex="-1"><a class="header-anchor" href="#_2、使用现成的springboot项目-二选一"><span>2、使用现成的springboot项目(二选一)</span></a></h2><h3 id="docker安装-1" tabindex="-1"><a class="header-anchor" href="#docker安装-1"><span>docker安装</span></a></h3><p>我提前把springboot项目添加了依赖，并开启了prometheus。然后封装成<code>linge365/springboot-demo</code>镜像</p><p>因为服务器上安装的<code>CAdvisor</code>已经把8080端口占用了。所以映射为8081端口</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker run -d --restart=always -p 8081:8080 --name springboot-demo linge365/springboot-demo</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="检查" tabindex="-1"><a class="header-anchor" href="#检查"><span>检查</span></a></h3><p><a href="http://192.168.11.62:8081/actuator/prometheus" target="_blank" rel="noopener noreferrer">http://192.168.11.62:8081/actuator/prometheus</a></p><h2 id="_3、prometheus配置" tabindex="-1"><a class="header-anchor" href="#_3、prometheus配置"><span>3、Prometheus配置</span></a></h2><p>prometheus配置采集springboot2.x的应用target提供的数据</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>cd /data/docker-prometheus </span></span>
<span class="line"><span></span></span>
<span class="line"><span>#在scrape_configs(搜刮配置):下面增加如下配置：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>cat &gt;&gt; prometheus/prometheus.yml &lt;&lt; &quot;EOF&quot;</span></span>
<span class="line"><span>#  Spring Boot 2.x 应用数据采集配置</span></span>
<span class="line"><span>  - job_name: &#39;springboot-demo&#39;</span></span>
<span class="line"><span>    metrics_path: &#39;/actuator/prometheus&#39;</span></span>
<span class="line"><span>    scrape_interval: 5s</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>    - targets: [&#39;192.168.11.62:8081&#39;]</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新加载配置</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>curl -X POST http://localhost:9090/-/reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="检查-1" tabindex="-1"><a class="header-anchor" href="#检查-1"><span>检查</span></a></h3><p><a href="http://192.168.11.61:9090/targets?search=" target="_blank" rel="noopener noreferrer">http://192.168.11.61:9090/targets?search=</a></p><h2 id="_4、监控指标" tabindex="-1"><a class="header-anchor" href="#_4、监控指标"><span>4、监控指标</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>process_files_max_files # 最大文件处理数量</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_sessions_active_current_sessions # Tomcat 当前活跃 session 数量</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_sessions_alive_max_seconds # Tomcat session 最大存活时间</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_buffer_total_capacity_bytes   # 预估的池中缓冲区的总容量</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_threads_daemon_threads # 当前守护进程的线程数量</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_global_request_max_seconds{name=&quot;http-nio-8080&quot;,} # 全局最长一次请求的时间</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_sessions_active_max_sessions # 最大活跃 session 数量</span></span>
<span class="line"><span></span></span>
<span class="line"><span>system_cpu_usage # CPU 利用率</span></span>
<span class="line"><span>jvm_buffer_memory_used_bytes # 预估 Java 虚拟机用于此缓冲池的内存</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_classes_loaded_classes # 当前在 Java 虚拟机中加载的类的数量</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_memory_committed_bytes # 为 Java 虚拟机提交的内存量（以字节为单位）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_threads_live_threads # 当前线程数，包括守护进程和非守护进程的线程</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_threads_config_max_threads # 配置的 Tomcat 的最大线程数</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_global_received_bytes_total # Tomcat 接收到的数据量</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_global_sent_bytes_total # Tomcat 发送的数据量</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_threads_current_threads # Tomcat 当前的线程数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_sessions_created_sessions_total # Tomcat 创建的 session 数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>system_load_average_1m # 在一段时间内，排队到可用处理器的可运行实体数量和可用处理器上运行的可运行实体数量的总和的平均值</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_sessions_expired_sessions_total # 过期的 session 数量</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_buffer_count_buffers # 预估的池中的缓冲区数量</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_memory_used_bytes# JVM 内存使用量</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>process_uptime_seconds # Java 虚拟机的正常运行时间</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_gc_memory_allocated_bytes_total # 增加一个 GC 到下一个 GC 之后年轻代内存池的大小增加</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_gc_pause_seconds_count  # GC暂停耗时数量和总时间</span></span>
<span class="line"><span>jvm_gc_pause_seconds_sum</span></span>
<span class="line"><span>jvm_gc_pause_seconds_max</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_sessions_rejected_sessions_total # 被拒绝的 session 总数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_gc_live_data_size_bytes# Full GC 后的老年代内存池的大小</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_threads_busy_threads  # Tomcat 繁忙线程数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_threads_peak_threads # 自 Java 虚拟机启动或峰值重置以来的最高活动线程数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_threads_states_threads # 当前具有 NEW 状态的线程数</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_gc_max_data_size_bytes # jvm_gc内存池的最大大小</span></span>
<span class="line"><span></span></span>
<span class="line"><span>http_server_requests_seconds_count #某个接口的请求数量和请求总时间</span></span>
<span class="line"><span>http_server_requests_seconds_sum</span></span>
<span class="line"><span>http_server_requests_seconds_max</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_gc_memory_promoted_bytes_total # GC之前到GC之后的老年代内存池大小的正增加计数</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 日志按级别计数</span></span>
<span class="line"><span>logback_events_total{application=&quot;prometheus-demo&quot;,level=&quot;info&quot;,} 7.0</span></span>
<span class="line"><span>logback_events_total{application=&quot;prometheus-demo&quot;,level=&quot;trace&quot;,} 0.0</span></span>
<span class="line"><span>logback_events_total{application=&quot;prometheus-demo&quot;,level=&quot;warn&quot;,} 0.0</span></span>
<span class="line"><span>logback_events_total{application=&quot;prometheus-demo&quot;,level=&quot;debug&quot;,} 0.0</span></span>
<span class="line"><span>logback_events_total{application=&quot;prometheus-demo&quot;,level=&quot;error&quot;,} 0.0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>process_start_time_seconds # 启动时间</span></span>
<span class="line"><span></span></span>
<span class="line"><span>process_files_open_files # 打开文件描述符的数量</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_global_error_total  # 异常数量</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_memory_max_bytes # 可用于内存管理的最大内存量（以字节为单位）</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>process_cpu_usage # 最近的 CPU 利用率</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jvm_classes_unloaded_classes_total # 自 Java 虚拟机开始执行以来卸载的类总数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>system_cpu_count # CPU 核数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tomcat_global_request_seconds_count  # 全局请求总数和总耗时</span></span>
<span class="line"><span>tomcat_global_request_seconds_sum</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、触发器" tabindex="-1"><a class="header-anchor" href="#_5、触发器"><span>5、触发器</span></a></h2><p>prometheus服务器操作</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>#进入到prometheus安装目录</span></span>
<span class="line"><span>cd /data/docker-prometheus</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用cat创建springboot.yml触发器文件</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># 报警(触发器)配置</span></span>
<span class="line"><span>rule_files:</span></span>
<span class="line"><span>  - &quot;alert.yml&quot;</span></span>
<span class="line"><span>  - &quot;rules/*.yml&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加触发器（告警规则）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt;&gt; prometheus/rules/springboot.yml &lt;&lt;&quot;EOF&quot;</span></span>
<span class="line"><span>groups:</span></span>
<span class="line"><span>- name: SprinBoot</span></span>
<span class="line"><span>  rules:</span></span>
<span class="line"><span>  - alert: SprinBooErrorEvents</span></span>
<span class="line"><span>    expr: increase(logback_events_total{level=&quot;error&quot;}[2m]) &gt; 0</span></span>
<span class="line"><span>    for: 2m</span></span>
<span class="line"><span>    labels:</span></span>
<span class="line"><span>      severity: warning</span></span>
<span class="line"><span>    annotations:</span></span>
<span class="line"><span>      summary: &quot;Springboot错误事件 容器: $labels.instance&quot;</span></span>
<span class="line"><span>      description: &quot;在过去2分钟有新的{{ $value }}个错误事件&quot;</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="重新加载配置" tabindex="-1"><a class="header-anchor" href="#重新加载配置"><span>重新加载配置</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>curl -X POST http://localhost:9090/-/reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="检查-2" tabindex="-1"><a class="header-anchor" href="#检查-2"><span>检查</span></a></h3><p><a href="http://192.168.11.61:9090/alerts?search=" target="_blank" rel="noopener noreferrer">http://192.168.11.61:9090/alerts?search=</a></p><p>或：</p><p><a href="http://192.168.11.61:9090/rules" target="_blank" rel="noopener noreferrer">http://192.168.11.61:9090/rules</a></p><h2 id="_6、dashboard" tabindex="-1"><a class="header-anchor" href="#_6、dashboard"><span>6、Dashboard</span></a></h2><p>grafana将prometheus作为数据源进行可视化展示</p><p><a href="https://grafana.com/grafana/dashboards/12856-jvm-micrometer/" target="_blank" rel="noopener noreferrer">https://grafana.com/grafana/dashboards/12856-jvm-micrometer/</a></p><p><a href="https://grafana.com/grafana/dashboards/4701-jvm-micrometer/" target="_blank" rel="noopener noreferrer">https://grafana.com/grafana/dashboards/4701-jvm-micrometer/</a></p><p><a href="https://grafana.com/grafana/dashboards/10280" target="_blank" rel="noopener noreferrer">https://grafana.com/grafana/dashboards/10280</a></p><h3 id="监控数据库连接池dashboard" tabindex="-1"><a class="header-anchor" href="#监控数据库连接池dashboard"><span>监控数据库连接池dashboard</span></a></h3><p>hikari连接池：<a href="https://grafana.com/grafana/dashboards/6083" target="_blank" rel="noopener noreferrer">https://grafana.com/grafana/dashboards/6083</a></p><p>druid连接池：<a href="https://grafana.com/grafana/dashboards/11157" target="_blank" rel="noopener noreferrer">https://grafana.com/grafana/dashboards/11157</a></p><h1 id="四、我的微信" tabindex="-1"><a class="header-anchor" href="#四、我的微信"><span>四、我的微信</span></a></h1><p>如果碰到问题，可以随时加我微信，谢谢</p><figure><img src="`+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',67),t=[p];function r(d,c){return n(),a("div",null,t)}const m=s(l,[["render",r],["__file","2.11.监控springboot2.x.html.vue"]]),v=JSON.parse('{"path":"/note/Prometheus/2.11.%E7%9B%91%E6%8E%A7springboot2.x.html","title":"2.11.监控springboot2.x","lang":"zh-CN","frontmatter":{"title":"2.11.监控springboot2.x","order":16,"icon":"lightbulb","description":"一、环境 1、环境搭建 docker安装 略 docker-compose安装 略 java环境 二、监控java应用(tomcat/jar) JMX exporter 负责收集 Java 虚拟机信息 进入到tomcat安装目录，vim 三、监控java应用(springboot) 分4个步骤 1、引入maven依赖 2、application.pro...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/bj/note/Prometheus/2.11.%E7%9B%91%E6%8E%A7springboot2.x.html"}],["meta",{"property":"og:site_name","content":"风华"}],["meta",{"property":"og:title","content":"2.11.监控springboot2.x"}],["meta",{"property":"og:description","content":"一、环境 1、环境搭建 docker安装 略 docker-compose安装 略 java环境 二、监控java应用(tomcat/jar) JMX exporter 负责收集 Java 虚拟机信息 进入到tomcat安装目录，vim 三、监控java应用(springboot) 分4个步骤 1、引入maven依赖 2、application.pro..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"风华"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.11.监控springboot2.x\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"风华\\",\\"url\\":\\"/portfolio\\"}]}"]]},"headers":[{"level":2,"title":"1、环境搭建","slug":"_1、环境搭建","link":"#_1、环境搭建","children":[{"level":3,"title":"docker安装","slug":"docker安装","link":"#docker安装","children":[]},{"level":3,"title":"docker-compose安装","slug":"docker-compose安装","link":"#docker-compose安装","children":[]},{"level":3,"title":"java环境","slug":"java环境","link":"#java环境","children":[]}]},{"level":2,"title":"1、springboot项目(二选一)","slug":"_1、springboot项目-二选一","link":"#_1、springboot项目-二选一","children":[{"level":3,"title":"引入maven依赖","slug":"引入maven依赖","link":"#引入maven依赖","children":[]},{"level":3,"title":"application.propertiesl配置","slug":"application-propertiesl配置","link":"#application-propertiesl配置","children":[]}]},{"level":2,"title":"2、使用现成的springboot项目(二选一)","slug":"_2、使用现成的springboot项目-二选一","link":"#_2、使用现成的springboot项目-二选一","children":[{"level":3,"title":"docker安装","slug":"docker安装-1","link":"#docker安装-1","children":[]},{"level":3,"title":"检查","slug":"检查","link":"#检查","children":[]}]},{"level":2,"title":"3、Prometheus配置","slug":"_3、prometheus配置","link":"#_3、prometheus配置","children":[{"level":3,"title":"检查","slug":"检查-1","link":"#检查-1","children":[]}]},{"level":2,"title":"4、监控指标","slug":"_4、监控指标","link":"#_4、监控指标","children":[]},{"level":2,"title":"5、触发器","slug":"_5、触发器","link":"#_5、触发器","children":[{"level":3,"title":"重新加载配置","slug":"重新加载配置","link":"#重新加载配置","children":[]},{"level":3,"title":"检查","slug":"检查-2","link":"#检查-2","children":[]}]},{"level":2,"title":"6、Dashboard","slug":"_6、dashboard","link":"#_6、dashboard","children":[{"level":3,"title":"监控数据库连接池dashboard","slug":"监控数据库连接池dashboard","link":"#监控数据库连接池dashboard","children":[]}]}],"git":{},"readingTime":{"minutes":5.47,"words":1642},"filePathRelative":"note/Prometheus/2.11.监控springboot2.x.md","autoDesc":true}');export{m as comp,v as data};
